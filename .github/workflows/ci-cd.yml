name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Build and Push Docker Image
  build:
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TAG: ${{ steps.set-tag.outputs.IMAGE_TAG }}  # Pass IMAGE_TAG to next jobs

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set IMAGE_TAG (Short SHA)
        id: set-tag
        run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-js-app:$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-js-app:$IMAGE_TAG

  # Job 2: Run Tests
  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Job 3: Deploy to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.28.0'

      - name: Decode and Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ~/.kube/config  

      - name: Apply Kubernetes Deployment YAML
        run: |
          kubectl apply -f deployment.yaml   # Reapply the deployment YAML to recreate the deployment

      - name: Set image for deployment
        run: |
          kubectl set image deployment/my-nodejs-app my-nodejs-app=${{ secrets.DOCKER_USERNAME }}/node-js-app:${{ needs.build.outputs.IMAGE_TAG }}

      - name: Wait for deployment to finish
        run: |
          kubectl rollout status deployment/my-nodejs-app
